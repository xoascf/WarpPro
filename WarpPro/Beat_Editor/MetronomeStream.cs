using System;
using NAudio.Wave;

namespace Beat_Editor
{
	public class MetronomeStream : WaveStream
	{
		private static readonly double s16coeff = 3.0517578125E-05;

		private static readonly short[] click = new short[2000]
		{
			-17, -484, -1036, -499, 452, 2209, 4394, 4849, 3047, 576,
			-2685, -6423, -8372, -8394, -7210, -5307, -3309, -1337, 1479, 5047,
			7850, 9629, 11594, 13528, 13996, 12582, 9764, 6485, 2830, -1504,
			-7019, -13810, -20636, -26173, -29301, -28277, -22426, -14236, -6305, 910,
			7891, 14384, 20199, 25118, 28524, 30020, 29537, 26945, 21435, 13925,
			5108, -4806, -14255, -21638, -26005, -28260, -29307, -28696, -25939, -21594,
			-15757, -8011, 567, 8673, 16131, 22539, 27081, 28999, 27502, 22641,
			14695, 5531, -2410, -8439, -12438, -14552, -14632, -12880, -10016, -6573,
			-2897, 771, 3518, 4764, 5654, 6208, 4883, 2097, -566, -2917,
			-5874, -8644, -9673, -8948, -7114, -5104, -3489, -1814, 523, 3245,
			6119, 8868, 10736, 11809, 12341, 11959, 10793, 8829, 5609, 2801,
			1188, -1933, -6941, -11205, -14123, -15978, -15701, -13171, -9433, -5436,
			-2025, 1047, 4889, 9115, 11416, 11471, 11298, 11553, 11386, 9504,
			5679, 1227, -2636, -5773, -8713, -12772, -18200, -23302, -26456, -25085,
			-18399, -8876, 732, 9097, 16914, 24226, 29834, 32339, 31383, 28040,
			23590, 18251, 11869, 4876, -3341, -13084, -22933, -30092, -32768, -32355,
			-30967, -28254, -22822, -15427, -7324, 807, 8400, 14789, 19780, 24036,
			27500, 29308, 27968, 22442, 13421, 3816, -3627, -8953, -12748, -14819,
			-15200, -14633, -13425, -11477, -8670, -5054, -2073, -152, 2284, 5252,
			6863, 6821, 6188, 4806, 2092, -611, -1349, -776, -121, -386,
			-2129, -3901, -4526, -4156, -3403, -2262, -895, 865, 3408, 6118,
			8410, 8970, 7684, 5998, 4426, 2305, -452, -2191, -2048, -893,
			103, 582, 384, -563, -2009, -3204, -3364, -3012, -3053, -4067,
			-5326, -5846, -6055, -6828, -8178, -9147, -8777, -6393, -2610, 1110,
			3620, 4933, 5752, 6386, 7181, 8487, 10324, 12432, 14893, 17183,
			17890, 15327, 9521, 2489, -4233, -9745, -13540, -15585, -16547, -16554,
			-15767, -14201, -11411, -7954, -4551, -1581, 2126, 6757, 10359, 11893,
			11877, 10901, 8976, 6503, 3984, 1606, -818, -3274, -5933, -7767,
			-7666, -6677, -5494, -3876, -1826, -310, 486, 1041, 1411, 1559,
			1479, 1552, 1715, 1992, 2698, 3625, 4350, 4935, 5185, 5013,
			5004, 5201, 4673, 3214, 1013, -1777, -4244, -6602, -8859, -10676,
			-11673, -11315, -10005, -7886, -5064, -2143, 584, 3754, 6572, 8288,
			9314, 9826, 10033, 9548, 8355, 6202, 3451, 629, -2258, -4612,
			-5808, -5943, -5976, -5642, -4579, -3401, -2890, -3419, -4188, -4557,
			-4254, -3330, -2267, -1119, 61, 1244, 2367, 3169, 3620, 3636,
			3721, 4451, 5921, 7503, 8260, 7844, 6147, 3829, 1245, -1463,
			-3914, -5746, -6630, -6593, -5764, -4509, -3400, -2747, -2126, -1760,
			-1317, -423, 383, 1173, 1826, 2564, 3192, 3168, 2214, 569,
			-1144, -2594, -3451, -3901, -3714, -2882, -1886, -851, 579, 2392,
			3994, 5218, 5778, 5585, 4756, 3731, 2119, -198, -2115, -3505,
			-3908, -3424, -2802, -2228, -1856, -1182, -166, 810, 1683, 2227,
			2269, 1964, 1640, 1216, 616, 48, -543, -1148, -1726, -2142,
			-2147, -1816, -1460, -1227, -890, -660, -612, -557, -862, -1281,
			-1422, -1338, -984, -368, 424, 975, 1295, 1507, 1671, 2148,
			2510, 2572, 2328, 1844, 1364, 675, -94, -728, -1023, -1281,
			-1466, -1403, -1071, -425, -49, -5, -176, -159, -274, -643,
			-819, -1179, -1240, -1047, -831, -247, 264, 219, -62, -31,
			374, 968, 1441, 1606, 1348, 832, 299, -258, -655, -689,
			-545, -359, -42, 323, 599, 748, 940, 1156, 1418, 1707,
			1717, 1305, 631, -253, -1261, -1987, -2449, -2695, -2976, -3172,
			-3157, -3185, -2751, -1765, -591, 386, 1276, 2029, 2618, 3258,
			3626, 3702, 3479, 3132, 2587, 2110, 1695, 968, 229, -415,
			-908, -1377, -1739, -2170, -2444, -2393, -2285, -2011, -1895, -1774,
			-1443, -1039, -733, -512, -290, -70, 103, 308, 656, 980,
			1238, 1193, 1061, 941, 895, 978, 937, 802, 723, 851,
			708, 569, 547, 393, 242, 17, 136, 447, 624, 479,
			29, -350, -723, -974, -1071, -1217, -1275, -1303, -1331, -1287,
			-1222, -1320, -1633, -1765, -1565, -782, 164, 857, 1350, 1360,
			1316, 1370, 1446, 1686, 1888, 2005, 2131, 2142, 2044, 1677,
			997, 270, -525, -1213, -1667, -1833, -2070, -2356, -2483, -2583,
			-2527, -2357, -2161, -2214, -1964, -1176, -40, 1369, 2427, 3161,
			3494, 3538, 3428, 3115, 2921, 2620, 1895, 1011, 330, -330,
			-1104, -1854, -2586, -2921, -2809, -2697, -2417, -2076, -1799, -1388,
			-910, -439, -164, -77, -39, 158, 550, 1110, 1752, 2211,
			2368, 2249, 2121, 1986, 1845, 1611, 1271, 1035, 577, -199,
			-1057, -1955, -2673, -2974, -3103, -2900, -2437, -1969, -1407, -980,
			-372, 428, 1139, 1745, 2137, 2317, 2384, 2239, 1810, 1559,
			1253, 814, 437, 64, -260, -814, -1407, -1799, -1931, -1818,
			-1614, -1623, -1460, -926, -423, 185, 530, 753, 748, 623,
			826, 879, 885, 767, 579, 357, 347, 584, 523, 325,
			-120, -543, -698, -838, -896, -896, -979, -1090, -1025, -639,
			26, 584, 1055, 1397, 1756, 2299, 2434, 2220, 1688, 811,
			-112, -987, -1638, -2154, -2659, -3120, -3307, -2933, -1988, -926,
			-43, 672, 1180, 1613, 1960, 2118, 1981, 1565, 912, 258,
			29, 119, 87, -116, -202, -87, 200, 450, 604, 730,
			629, 342, -7, -299, -565, -1013, -1485, -1892, -2173, -2063,
			-1713, -1305, -952, -601, -4, 665, 1391, 2180, 2645, 2791,
			2708, 2268, 1573, 595, -516, -1497, -2205, -2481, -2400, -2150,
			-1792, -1260, -763, -123, 418, 797, 1519, 2241, 3009, 3330,
			2992, 2329, 1336, 354, -638, -1506, -2316, -2910, -3088, -2915,
			-2349, -1730, -1231, -918, -723, -550, -199, 271, 731, 1261,
			1552, 1561, 1536, 1513, 1398, 1159, 827, 640, 787, 1165,
			1546, 1594, 1270, 711, 17, -550, -914, -1358, -1905, -2521,
			-2996, -2930, -2532, -1959, -1320, -666, -45, 512, 1116, 1587,
			1905, 2041, 1936, 1723, 1548, 1294, 902, 425, -132, -450,
			-499, -450, -545, -780, -932, -1137, -1146, -733, -178, 176,
			40, -203, -188, -104, 302, 811, 1062, 1283, 1320, 1069,
			753, 406, -51, -494, -818, -1079, -1332, -1639, -2007, -2209,
			-2152, -1781, -1019, -94, 807, 1376, 1759, 2131, 2324, 2544,
			2708, 2737, 2574, 2053, 1444, 874, 229, -441, -1127, -1906,
			-2642, -3092, -3328, -3280, -3011, -2801, -2384, -1827, -1216, -563,
			43, 633, 1163, 1803, 2349, 2554, 2658, 2762, 2568, 2327,
			2062, 1448, 930, 437, -17, -357, -613, -675, -796, -904,
			-1044, -1161, -1227, -1239, -1163, -1213, -987, -715, -606, -337,
			-139, 116, 202, 132, 145, 84, 61, -142, -244, -54,
			187, 479, 633, 722, 860, 733, 398, 299, 214, 182,
			266, 496, 917, 1071, 1090, 864, 474, 40, -309, -413,
			-508, -469, -653, -921, -1154, -1510, -1803, -1950, -1833, -1501,
			-939, -332, 384, 1012, 1339, 1531, 1728, 1888, 1837, 1711,
			1319, 821, 425, 143, -50, -127, -287, -705, -1016, -1320,
			-1356, -1358, -1224, -963, -975, -648, -301, -101, -34, -90,
			4, 296, 668, 907, 1211, 1272, 1118, 884, 666, 662,
			507, 357, 222, 149, 198, -64, -469, -796, -1200, -1686,
			-1988, -1985, -1694, -1193, -609, 108, 918, 1649, 2153, 2379,
			2345, 2211, 1864, 1353, 871, 323, -314, -1141, -1810, -2357,
			-2858, -2979, -2850, -2423, -1673, -694, 302, 1190, 1827, 2252,
			2302, 1956, 1679, 1150, 660, 613, 635, 577, 574, 609,
			342, -120, -447, -800, -1090, -1056, -1007, -831, -596, -507,
			-512, -609, -562, -640, -782, -749, -429, -66, 160, 579,
			936, 1226, 1398, 1328, 1144, 860, 484, 198, 99, 39,
			28, -213, -540, -847, -1155, -1319, -1389, -1178, -816, -372,
			18, 435, 863, 969, 1064, 1133, 1036, 1025, 1047, 975,
			846, 506, 166, -166, -594, -1016, -1425, -1548, -1624, -1530,
			-1217, -884, -591, -457, -262, 5, 398, 783, 1257, 1641,
			1801, 1801, 1563, 1330, 865, 337, -144, -555, -753, -859,
			-770, -660, -656, -682, -793, -910, -935, -968, -831, -538,
			-240, 141, 491, 633, 599, 523, 334, 297, 540, 755,
			841, 969, 1146, 1051, 814, 607, 340, 117, -75, -340,
			-701, -925, -996, -1068, -951, -973, -962, -857, -902, -877,
			-731, -435, -296, 109, 534, 770, 1025, 1038, 1161, 1083,
			903, 600, 328, 165, -10, 70, 75, 199, 242, 296,
			299, 94, -116, -452, -650, -767, -670, -535, -406, -253,
			-362, -420, -291, -180, -115, 252, 623, 711, 681, 461,
			222, -86, -533, -1022, -1281, -1090, -798, -483, -61, 439,
			885, 1101, 1278, 1374, 1268, 1029, 703, 535, 503, 222,
			-115, -426, -868, -1144, -1222, -1031, -772, -510, -160, -76,
			5, -17, -117, -141, -262, -253, -258, -214, -215, -285,
			-225, -116, 138, 369, 665, 965, 1141, 1229, 1312, 1415,
			1339, 1354, 1041, 347, -263, -899, -1358, -1605, -1712, -1796,
			-1726, -1427, -1180, -887, -495, -180, 12, 324, 643, 731,
			851, 950, 941, 961, 855, 624, 307, 28, -44, -112,
			-139, -13, 97, 112, 230, 302, 225, 131, -94, -293,
			-376, -354, -178, -18, -68, -67, -76, -242, -255, -342,
			-418, -413, -415, -304, -108, 39, 2, -109, -352, -407,
			-264, -169, -61, 72, 227, 328, 555, 701, 841, 849,
			671, 787, 892, 951, 909, 655, 235, -270, -672, -997,
			-1244, -1462, -1523, -1545, -1506, -1174, -893, -650, -259, 120,
			495, 895, 1290, 1476, 1426, 1388, 1255, 1035, 827, 594,
			230, -253, -599, -750, -792, -728, -690, -739, -798, -847,
			-777, -665, -484, -335, -178, 122, 354, 503, 469, 474,
			423, 457, 633, 644, 747, 682, 562, 442, 282, 141,
			-49, -260, -593, -767, -876, -969, -1005, -965, -855, -791,
			-688, -463, -186, 132, 594, 963, 1276, 1468, 1598, 1600,
			1339, 1066, 627, 188, -231, -684, -1031, -1378, -1629, -1595,
			-1526, -1457, -1231, -948, -505, -121, 306, 705, 957, 1210,
			1227, 1210, 1066, 783, 602, 420, 281, 213, 106, 9,
			-127, -274, -280, -398, -496, -547, -666, -610, -507, -467,
			-445, -430, -352, -194, -112, 0, 203, 391, 502, 555,
			692, 770, 847, 802, 467, 198, -88, -386, -538, -677,
			-725, -728, -721, -621, -525, -424, -249, -39, 169, 479,
			716, 802, 881, 788, 705, 587, 381, 268, 169, 44,
			-208, -253, -376, -534, -525, -701, -728, -820, -816, -717,
			-505, -210, -194, 35, 209, 347, 495, 648, 859, 978,
			1014, 928, 913, 644, 406, 177, -134, -293, -546, -733,
			-770, -777, -897, -909, -816, -709, -609, -455, -205, 29,
			308, 497, 671, 851, 831, 594, 547, 435, 340, 395,
			244, 169, 27, -62, -209, -284, -197, -224, -182, -199,
			-224, -280, -259, -253, -290, -273, -362, -365, -284, -259,
			-128, -2, -1, 126, 181, 291, 396, 342, 363, 353,
			352, 243, 101, -15, -148, -121, -70, -68, -27, -4,
			43, 53, 17, 7, -76, -114, -130, -27, 11, -60,
			-34, -122, -163, -147, -154, -122, -48, -38, -120, -189,
			-213, -205, -277, -309, -350, -229, 11, 143, 389, 538,
			629, 670, 577, 577, 503, 313, 98, -32, -101, -197,
			-284, -423, -516, -596, -621, -486, -320, -219, -42, 86,
			54, 122, 131, 83, 57, 65, 28, -87, -61, -79,
			-147, -40, 105, 112, 221, 350, 401, 393, 325, 308,
			222, 280, 189, -21, -155, -418, -481, -496, -566, -538,
			-484, -398, -159, -6, 5, 55, 103, 127, 127, 177,
			137, 128, 72, 44, 98, -5, 57, 51, -1, 48,
			56, 78, 95, 176, 175, 183, 203, 167, 128, 13,
			-38, -22, -53, -112, -104, -97, -111, -155, -199, -115,
			-149, -213, -186, -218, -138, -24, -62, -115, -127, -112,
			12, 75, 98, 209, 262, 285, 332, 381, 367, 359,
			348, 292, 235, 240, 178, -46, -158, -320, -478, -474,
			-523, -511, -492, -491, -332, -265, -222, -9, 71, 134,
			257, 374, 435, 428, 497, 464, 356, 230, 121, 114,
			33, -109, -236, -297, -222, -248, -233, -230, -286, -191,
			-187, -94, -20, -1, 39, 81, 165, 220, 254, 170,
			188, 170, 241, 241, 187, 205, 70, 76, -77, -133,
			-83, -172, -252, -273, -259, -265, -277, -315, -178, -147,
			-123, -95, 22, 150, 229, 433, 384, 451, 492, 422,
			374, 281, 130, -46, -131, -233, -295, -431, -458, -506,
			-523, -455, -440, -253, -92, 16, 163, 276, 326, 472,
			459, 299, 262, 226, 119, 59, 95, 18, 34, 2,
			-97, -152, -181, -138, -199, -258, -277, -185, -116, -97,
			-59, -29, -68, -75, 43, 93, 114, 94, 174, 177,
			164, 194, 136, 131, 76, -44, -178, -229, -254, -220,
			-221, -165, -163, -159, -31, -45, 81, 73, 139, 203,
			189, 328, 265, 196, 153, 99, 26, 72, -28, -15,
			-16, -209, -156, -222, -207, -257, -260, -240, -194, -88,
			-153, -4, 73, 24, 43, 170, 215, 268, 271, 264,
			384, 323, 302, 181, 83, 45, -95, -229, -275, -248,
			-244, -271, -354, -298, -254, -208, -136, -75, -7, 32,
			164, 237, 233, 265, 251, 191, 186, 61, 17, 18,
			13, 13, -90, -42, -110, -71, -53, -153, -81, -109,
			-88, -87, -104, -77, -50, -75, -84, -64, -112, -21,
			-22, -70, -27, -29, 65, 101, 61, 45, 29, 70,
			46, 70, 87, -43, -40, 5, 1, 21, -12, -31,
			82, 84, -17, 0, -9, -16, 4, 26, -11, -12
		};

		private WaveStream input;

		private float[] fbuffer = new float[0];

		private double beatDuration;

		private double position;

		private bool enabled;

		private double firstBeatPos;

		public override long Length
		{
			get
			{
				return input.Length;
			}
		}

		public override long Position
		{
			get
			{
				return input.Position;
			}
			set
			{
				input.Position = value;
				InitClickPosition();
			}
		}

		public override WaveFormat WaveFormat
		{
			get
			{
				return input.WaveFormat;
			}
		}

		public bool Enable
		{
			get
			{
				return enabled;
			}
			set
			{
				enabled = value;
			}
		}

		public double FirstBeatPos
		{
			get
			{
				return firstBeatPos / (double)input.WaveFormat.SampleRate;
			}
			set
			{
				firstBeatPos = value * (double)input.WaveFormat.SampleRate;
				InitClickPosition();
			}
		}

		public MetronomeStream(WaveStream input)
		{
			this.input = input;
			Position = 0L;
			setBpm(60.0);
		}

		private void InitClickPosition()
		{
			position = (double)Position * 8.0 / (double)(input.WaveFormat.Channels * input.WaveFormat.BitsPerSample) - firstBeatPos - 0.001 * (double)input.WaveFormat.SampleRate;
		}

		public void setBpm(double bpm)
		{
			beatDuration = (double)input.WaveFormat.SampleRate * 60.0 / bpm;
			InitClickPosition();
		}

		private int MixInClick(float[] buffer, int offset, int position, int numFrames, int numChannels)
		{
			numFrames = Math.Min(position + numFrames, click.Length) - position;
			switch (numChannels)
			{
			case 1:
			{
				for (int j = 0; j < numFrames; j++)
				{
					buffer[offset + j] = (float)(0.5 * (double)buffer[offset + j] + (double)click[j + position] * s16coeff);
				}
				break;
			}
			case 2:
			{
				for (int i = 0; i < numFrames; i++)
				{
					int num = 2 * (offset + i);
					buffer[num] = (float)(0.5 * (double)buffer[num] + (double)click[i + position] * s16coeff);
					buffer[num + 1] = (float)(0.5 * (double)buffer[num + 1] + (double)click[i + position] * s16coeff);
				}
				break;
			}
			}
			return numFrames;
		}

		public override int Read(byte[] buffer, int origOffset, int count)
		{
			int channels = input.WaveFormat.Channels;
			int num = input.WaveFormat.BitsPerSample / 8;
			count = input.Read(buffer, origOffset, count);
			int num2 = count / num;
			if (!enabled)
			{
				position += num2 / channels;
				return count;
			}
			if (fbuffer.Length < num2)
			{
				fbuffer = new float[num2];
			}
			Buffer.BlockCopy(buffer, origOffset, fbuffer, 0, count);
			int num3 = num2 / channels;
			int num4 = 0;
			position %= beatDuration;
			if (position < 0.0)
			{
				position += beatDuration;
			}
			while (num3 > 0)
			{
				if (position < (double)click.Length)
				{
					num2 = MixInClick(fbuffer, num4, (int)position, num3, channels);
					num4 += num2;
					num3 -= num2;
					position += num2;
				}
				if (num3 > 0)
				{
					num2 = Math.Min(num3, (int)Math.Ceiling(beatDuration - position));
					if (num2 > 0)
					{
						int num5 = num4 * channels;
						for (int i = 0; i < num2 * channels; i++)
						{
							fbuffer[num5 + i] = 0.5f * fbuffer[num5 + i];
						}
						num4 += num2;
						num3 -= num2;
						position += num2;
					}
				}
				position %= beatDuration;
			}
			Buffer.BlockCopy(fbuffer, 0, buffer, origOffset, count);
			return count;
		}
	}
}
