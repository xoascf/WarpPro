<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <Color x:Key="BackgroundColor">#293955</Color>
  <Color x:Key="Color1">#364e6f</Color>
  <Color x:Key="Color2">#6080a0</Color>
  <Color x:Key="TextColor">#d0d0d0</Color>
  <SolidColorBrush x:Key="CanvasBackground">#293955</SolidColorBrush>
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="Background" Value="#293955" />
    <Setter Property="Foreground" Value="#c0d0e0" />
  </Style>
  <Style x:Key="ToolBar.SeparatorStyleKey" TargetType="{x:Type Separator}">
    <Setter Property="Height" Value="1" />
    <Setter Property="Margin" Value="0,4,0,4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderThickness="1" BorderBrush="#6080a0" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Style.Resources>
      <ResourceDictionary>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#293955" />
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#6080a0" />
      </ResourceDictionary>
    </Style.Resources>
  </Style>
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="Background" Value="#5c563d" />
  </Style>
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="Background" Value="#293955" />
    <Setter Property="Foreground" Value="#c0d0e0" />
    <Setter Property="BorderThickness" Value="0" />
  </Style>
  <Style x:Key="{x:Type Control}" TargetType="{x:Type Control}">
    <Setter Property="Background" Value="#293955" />
  </Style>
  <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
    <Setter Property="Background" Value="#293955" />
    <Setter Property="BorderBrush" Value="#6080a0" />
  </Style>
  <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
    <Setter Property="Background" Value="#293955" />
  </Style>
  <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
    <Setter Property="Background" Value="#364e6f" />
    <Setter Property="BorderBrush" Value="#6080a0" />
  </Style>
  <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Background" Value="#364e6f" />
    <Setter Property="BorderBrush" Value="#6080a0" />
    <Setter Property="Foreground" Value="#c0d0e0" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="#293955" />
        <Setter Property="Foreground" Value="#6080a0" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="#6080a0" />
    <Setter Property="BorderBrush" Value="#364e6f" />
    <Setter Property="BorderThickness" Value="2,2,2,2" />
  </Style>
  <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground" Value="#c0d0e0" />
  </Style>
  <Style x:Key="Window" TargetType="{x:Type Window}">
    <Setter Property="Background" Value="#293955" />
    <Setter Property="BorderBrush" Value="#6080a0" />
    <Setter Property="BorderThickness" Value="2" />
  </Style>
  <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
    <Setter Property="BorderBrush" Value="#6080a0" />
    <Setter Property="Foreground" Value="#c0d0e0" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="#293955" />
        <Setter Property="Foreground" Value="#6080a0" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="ComboBoxControlTemplate" TargetType="{x:Type ComboBox}">
    <Grid Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition MinWidth="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}" Width="0" />
      </Grid.ColumnDefinitions>
      <Popup Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" Margin="1" PopupAnimation="{DynamicResource SystemParameters.ComboBoxPopupAnimationKey}" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
        <Themes:SystemDropShadowChrome Themes:SystemDropShadowChrome.Name="shadow" Themes:SystemDropShadowChrome.Color="Transparent" FrameworkElement.MaxHeight="{TemplateBinding MaxDropDownHeight}" FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
          <Border Name="DropDownBorder" BorderBrush="{DynamicResource SystemColors.WindowFrameBrushKey}" BorderThickness="1" Background="{DynamicResource SystemColors.WindowBrushKey}">
            <ScrollViewer Name="DropDownScrollViewer">
              <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                  <Rectangle Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Themes:SystemDropShadowChrome>
      </Popup>
      <ToggleButton Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="ButtonBase.ClickMode" Value="Press" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                  <Border Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="#364e6f">
                    <Border Name="splitBorder" BorderBrush="#00FFFFFF" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource SystemParameters.VerticalScrollBarWidthKey}">
                      <Path Name="Arrow" Data="F1 M0,0 L2.667,2.66665 L5.3334,0 L5.3334,-1.78168 L2.6667,0.88501 L0,-1.78168 L0,0" Fill="#c0d0e0" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" />
                    </Border>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                      <Setter TargetName="Arrow" Property="Shape.Fill" Value="#c0d0e0" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                      <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF000000" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                      <Setter TargetName="Arrow" Property="Shape.Fill" Value="#364e6f" />
                      <Setter TargetName="templateRoot" Property="Border.Background" Value="#293955" />
                      <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#6080a0" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </ToggleButton>
      <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5" />
        <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000" />
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="False">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping" Value="True" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
      </MultiTrigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
        <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="Background" Value="#6080a0" />
    <Setter Property="Foreground" Value="#c0d0e0" />
  </Style>
  <ControlTemplate x:Key="CheckBoxControlTemplate1" TargetType="{x:Type CheckBox}">
    <Grid Name="templateRoot" Background="#00FFFFFF" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Border Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
        <Grid Name="markGrid">
          <Path Name="optionMark" Data="F1 M9.97498,1.22334 L4.6983,9.09834 L4.52164,9.09834 L0,5.19331 L1.27664,3.52165 L4.255,6.08833 L8.33331,1.52588E-05 L9.97498,1.22334" Fill="#FF212121" Margin="1" Opacity="0" Stretch="None" />
          <Rectangle Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0" />
        </Grid>
      </Border>
      <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ContentControl.HasContent" Value="True">
        <Setter Property="FrameworkElement.FocusVisualStyle">
          <Setter.Value>
            <Style>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource SystemColors.ControlTextBrushKey}" StrokeThickness="1" StrokeDashArray="1 2" />
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding" Value="4,-1,0,0" />
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="#80a0c0" />
        <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="#FF5593FF" />
        <Setter TargetName="optionMark" Property="Shape.Fill" Value="#FF212121" />
        <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="#FF212121" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="#293955" />
        <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="#6080a0" />
        <Setter TargetName="optionMark" Property="Shape.Fill" Value="#364e6f" />
        <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="#293955" />
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="True">
        <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="#80a0c0" />
        <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="#FF3C77DD" />
        <Setter TargetName="optionMark" Property="Shape.Fill" Value="#FF212121" />
        <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="#FF212121" />
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
        <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="0" />
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
        <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="0" />
        <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
    <Border Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
      <ScrollViewer Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56" />
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF7EB4EA" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Setter TargetName="border" Property="Border.BorderBrush" Value="#FF569DE5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>